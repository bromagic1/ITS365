<html>

<head>
    
     <style>
         button {
        background-color: white;
        border: 4px;
        color: black;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 10px;
      }

      body {
        background-color: grey;
        border: 15px solid black;
        margin: 0;
        padding: 15px;
        box-sizing: border-box;
      }
    </style>

<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js" ></script>

<script>

async function load() {
    const url = 'https://bromagic1.github.io/ITS365/ProjectModel/model.json';
    const model = await tf.loadLayersModel(url);
    return model;
};

function predict(model) {

    const userInput = document.getElementById('csvFile').value;
    const inputTensor = tf.tensor([[parseInt(userInput)]]);

    model.then(model => {
        let result = model.predict(inputTensor);
        alert("Predicted Stanley Cup Winner: " + result);
        
    });
};

const model = load();

</script>
</head>

<body>
<h2>  Stanley Cup Predictor  </h3>
    <h3> Upload a csv file with the NHL team stats for the year you wish to predict a Stanley Cup Winner For </h2>

<input type="file" id="csv-file" accept=".csv">
    <button onclick="predict()">Predict</button>
    <div id="result"></div>

    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.9.0/dist/tf.min.js"></script>
    <script>
      async function predict() {
        const fileInput = document.getElementById('csv-file');
        const file = fileInput.files[0];
        const reader = new FileReader();
        reader.readAsText(file);

        reader.onload = async function(event) {
          const csvData = event.target.result;
          const data = tf.data.csv(csvData);

          const model = await tf.loadLayersModel('model.json');
          const prediction = model.predict(data);
          const result = await prediction.data();

          const output = document.getElementById('result');
          output.innerHTML = result;
        };
      }
    </script>

<button onclick="predict(model)">Predict</button>

</body>

</html>
